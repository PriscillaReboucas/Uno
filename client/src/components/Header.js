import React from 'react';
import { Link } from "react-router-dom";
import parse from "html-react-parser";
import './Header.css'
import logo from '../assets/south-uno-logo.svg'

// const svgLogo = `<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
// width="80px" height="40px" viewBox="0 0 324 233" enable-background="new 0 0 324 233" xml:space="preserve">
// <g transform="translate(0.000000,1080.000000) scale(0.100000,-0.100000)">
// <path d="M1895.4,10796.063c-166.602-17.246-321.475-54.844-476.006-116.23c-127.627-50.361-303.535-143.838-428.76-227.656
//  c-212.471-142.451-399.414-322.51-533.252-514.99l-30.01-43.105l13.447-12.773c12.422-12.412,20.01-31.035,130.039-325.264
//  c63.818-171.777,122.803-324.57,130.381-339.414c25.879-50.361,61.748-77.266,106.934-80.703l23.467-1.719l-2.422,15.156
//  c-4.824,33.467-15.869,65.537-129.004,367.344c-96.592,258.027-117.285,316.309-117.285,330.459v17.246l76.924,77.266
//  l76.924,76.924l134.17,49.658c74.16,27.598,139.355,52.441,144.873,55.537c15.518,8.623,269.736,101.406,277.334,101.406
//  c12.754,0,23.447-6.553,144.521-85.547c66.914-43.799,121.416-78.975,121.416-78.643c0,0.693-10.01,27.939-22.422,60.703
//  c-23.799,62.783-26.904,81.416-16.895,96.592c9.316,13.799,136.592,141.416,146.572,146.592
//  c22.08,11.738,296.318,112.1,306.328,112.1c12.754,0,26.904-6.553,35.869-16.553c3.438-3.789,13.789-26.211,22.412-50.01
//  c8.975-23.457,17.607-43.115,18.975-43.467c1.387-0.342,13.115,12.422,25.879,27.939c69.668,86.924,184.18,185.234,274.561,236.279
//  c45.869,26.221,134.521,57.949,191.094,68.643c38.281,7.246,38.643,6.904-32.08,30.352
//  c-82.09,27.246-174.531,48.301-277.666,62.773C2176.875,10800.556,1958.515,10802.626,1895.4,10796.063z"/>
// <path d="M2588.711,10657.753c-60-8.623-137.275-32.773-189.004-58.633c-110.742-55.879-247.666-180.752-325.967-297.334
//  c-11.387-16.563-23.135-35.186-26.23-41.738c-3.438-6.211-7.227-10.01-8.604-8.633c-1.396,1.729-12.422,29.668-24.482,61.748
//  c-38.311,103.135-42.119,112.1-46.25,112.1c-2.402,0-66.221-23.096-141.758-51.387l-136.934-51.406l-62.793-64.834
//  c-34.131-35.527-62.764-65.537-63.457-66.914c-0.684-1.387,20.01-58.301,45.537-126.25c25.518-68.301,45.869-124.17,45.186-124.873
//  c-0.703-0.684-82.1,51.738-180.762,116.25l-180.039,117.275l-102.461-37.266c-56.211-20.684-174.531-64.141-262.822-96.914
//  l-160.4-59.326l-66.914-66.914l-67.266-66.582l116.582-311.465c64.17-171.426,119.355-322.852,123.154-337.002
//  c8.271-32.754,8.975-78.281,1.025-89.678c-8.623-12.051-25.869-17.588-53.809-17.588c-47.256,0-83.818,15.508-118.652,50.02
//  c-11.377,11.367-27.598,32.08-35.869,45.869c-10.352,17.598-49.678,118.662-132.813,340.791
//  c-65.176,173.496-119.004,316.299-120.029,317.334c-0.684,0.693-65.537-22.422-143.838-51.387l-142.451-53.125l-63.125-65.537
//  L0,9608.476l112.1-300.781c125.557-336.641,129.697-347.344,153.848-392.871c71.396-133.828,168.672-218.691,288.701-251.465
//  c31.387-8.623,38.281-8.965,107.627-8.965c64.15,0,78.984,1.035,110.371,7.598c81.758,17.93,173.496,57.588,238.008,103.135
//  c38.633,27.598,214.883,201.084,236.279,233.164c7.246,10.693,14.131,19.658,15.176,19.658c1.035,0,13.789-32.07,27.939-70.713
//  c14.141-38.975,27.256-70.693,28.623-70.693c1.387,0,65.195,23.438,141.426,52.07l138.662,52.441l64.854,64.15
//  c35.527,35.176,64.502,65.195,64.502,66.582c0,1.709-22.061,62.07-48.643,134.512c-26.904,72.793-49.668,134.873-50.693,138.652
//  c-1.055,3.799,58.975-34.141,158.33-100.361c87.939-58.643,174.873-116.24,192.803-127.979l33.115-21.035l116.592,42.432
//  l116.924,42.764l64.834,64.844l65.225,65.195l-6.914,18.271c-3.789,10.01-6.904,19.326-6.904,21.045c0,1.738,7.939,0,17.588-3.438
//  c31.758-12.08,85.889-23.457,131.426-27.598c142.803-13.115,296.982,36.221,425.313,136.592
//  c34.15,26.563,99.668,93.477,130.02,132.803c79.346,102.783,126.25,196.602,148.33,297.666c6.895,30.703,7.578,45.527,7.92,117.969
//  c0,73.809-1.025,86.924-7.92,120.723c-52.441,248.359-223.516,431.855-451.875,484.971c-23.105,5.518-45.156,7.246-97.256,8.291
//  C2629.433,10658.788,2594.58,10658.446,2588.711,10657.753z M2735.654,10616.356c69.336-11.377,146.24-43.799,208.34-86.914
//  c42.422-29.668,109.678-98.652,139.365-143.496c67.588-101.758,101.055-203.516,106.23-321.133
//  c8.271-199.365-86.592-376.67-252.48-472.217c-79.336-45.518-163.857-67.939-256.973-67.939c-81.416,0-142.119,14.131-215.596,50
//  c-58.291,28.643-97.949,57.275-144.873,103.828c-213.154,213.525-236.289,556.738-52.441,771.279
//  c72.793,84.502,186.279,146.602,305.957,166.943C2610.791,10623.261,2696.347,10622.919,2735.654,10616.356z M2138.916,9875.8
//  c183.506-487.744,188.35-500.84,181.094-504.639c-3.789-2.08-44.502-17.246-90.352-33.799l-82.793-30.342l-344.941,228.662
//  c-189.375,125.566-347.344,230.771-350.449,233.525c-3.457,2.754-6.211,3.799-6.211,1.729c0-1.729,53.477-145.908,118.994-320.43
//  c65.205-174.189,118.32-316.992,117.979-317.344c-2.08-1.729-209.043-77.275-211.445-77.275
//  c-2.422,0-371.142,984.092-374.59,999.961c-0.693,3.105,27.588,15.527,93.809,40.352c52.09,19.668,96.582,35.186,98.32,34.502
//  c2.061-0.693,71.045-45.527,153.486-99.346c82.432-54.16,233.506-152.803,335.967-219.717
//  c102.09-66.914,186.25-121.074,186.602-120.381c0.693,0.693-49.668,137.617-112.1,304.57
//  c-62.422,166.943-113.145,303.535-112.441,304.238c2.393,2.402,207.646,78.975,208.682,77.949
//  C1949.541,10377.313,2035.107,10151.396,2138.916,9875.8z M1137.236,9727.821c62.783-167.637,116.943-316.299,121.074-330.449
//  c50.703-183.145,20-326.982-91.406-431.162c-104.17-97.275-293.535-162.109-423.574-145.205
//  c-46.914,6.201-78.984,15.859-120.732,36.553c-85.537,42.783-151.768,115.898-205.225,226.631
//  c-17.256,35.518-232.139,603.623-236.982,625.693c-1.709,8.281-9.639,4.834,129.365,56.572
//  c44.492,16.553,78.301,27.246,79.668,25.518c1.729-1.719,51.396-132.793,110.732-291.123
//  c59.326-158.32,113.125-298.711,119.688-312.148c33.799-67.607,81.748-112.109,140.742-130.059
//  c34.482-10.684,86.914-10.684,122.441,0.361c33.115,10,73.125,31.055,94.16,48.975c24.834,21.396,49.336,58.291,60.029,90.732
//  c7.92,24.121,8.955,33.447,8.955,69.316c-0.342,30.713-2.07,48.281-7.246,68.301c-4.131,14.824-56.211,157.617-115.889,317.324
//  s-108.994,292.51-109.688,295.273c-0.693,3.096,30.01,16.201,102.451,43.447c56.904,21.738,104.502,39.326,105.547,39.326
//  C1022.725,10032.05,1074.814,9895.106,1137.236,9727.821z"/>
// <path d="M2599.756,10402.499c-50.352-8.965-101.406-33.105-140.059-66.221c-64.141-54.502-97.256-149.014-86.904-246.289
//  c17.598-161.768,119.678-298.018,246.953-329.063c35.547-8.965,92.1-7.93,129.365,1.738
//  c58.633,15.166,114.512,49.658,148.311,90.703c21.055,25.879,45.195,74.17,53.828,107.979
//  c9.307,35.859,8.623,117.266-1.045,156.934c-33.457,134.521-116.592,239.385-217.305,274.219
//  C2687.695,10408.368,2648.047,10411.132,2599.756,10402.499z M2589.756,10226.933c63.115-20,118.662-72.773,157.295-149.004
//  c29.99-60.371,41.729-105.898,41.729-166.602c0-37.949-1.045-45.195-8.281-61.396c-16.914-37.246-50.713-55.889-101.768-55.889
//  c-96.924,0-179.014,60.02-231.445,169.717c-35.156,73.457-49.668,171.074-31.719,213.848c11.035,26.563,39.668,50.02,70.371,57.949
//  C2507.656,10241.073,2558.701,10236.933,2589.756,10226.933z"/>
// <path d="M2496.963,10187.265c-37.607-11.387-47.598-41.045-35.859-108.994c17.236-99.346,72.432-186.611,137.959-217.305
//  c54.854-25.869,116.934-22.773,134.531,6.543c8.955,14.492,9.326,67.949,0.322,109.346
//  c-16.895,80.713-71.396,162.461-128.301,192.471C2571.142,10187.265,2523.174,10195.204,2496.963,10187.265z"/>
// <path d="M2731.855,9334.95c-71.748-22.08-94.502-25.195-181.094-25.195c-61.387,0-85.537,1.387-106.904,5.869l-27.607,5.879
//  l-70.703-70.371c-38.984-38.623-73.828-72.09-77.959-73.828c-3.799-2.061-60.01-23.105-125.225-46.904
//  c-81.387-30.01-122.432-43.447-132.451-43.447c-13.105,0-23.447,5.85-100.713,57.598
//  c-170.742,113.828-184.561,122.441-180.752,112.1c27.939-72.441,49.336-128.32,51.406-135.908
//  c6.201-20.352-0.352-29.326-78.652-107.275l-75.547-75.527l-146.924-54.854c-164.531-61.396-169.365-62.441-190.058-44.141
//  c-11.387,9.658-14.492,16.201-36.914,74.492c-2.764,7.256-4.482,5.85-26.211-16.904
//  c-66.221-68.643-159.697-153.828-195.928-177.979c-71.396-47.598-159.014-84.512-242.48-102.1
//  c-55.879-11.738-125.557-17.588-163.496-13.457c-16.904,1.719-30.352,2.07-30.352,1.045c0-1.045,17.93-11.035,40.01-22.08
//  c227.998-113.828,504.98-141.426,815.42-81.055c245.244,47.598,508.428,151.758,722.646,285.254
//  c197.285,123.154,391.143,296.631,541.182,483.936c40.693,51.055,58.633,75.547,54.854,75.205
//  C2765.996,9344.931,2749.795,9340.468,2731.855,9334.95z"/>
// </g>
// </svg>
// `;



const Header = () => {
  return (
    <header className="header">
      <nav className='header__nav'>
        <Link to='' className='header__links'>
          <div className='nav__title'>
            {/* <h1 className="header__h1">SOUTH<span className='header__logo'>{logo}</span></h1>    
                    */}
           <img className="logo" src={logo} alt="South Logo" />
          </div>
        </Link>
        <div className='nav__links'>
          <Link to='login' className="header__links">
            <h2>Join</h2>
          </Link>
          <Link to='rules' className='header__links'>
          <h2>Rules</h2>
          </Link>
          <Link to='scoreboard' className='header__links'>
          <h2>Scoreboard</h2>
          </Link>
          <Link to='about' className='header__links'>
          <h2>About</h2>
          </Link> 
        </div>
      </nav>
  </header>
  )
};

export default Header;